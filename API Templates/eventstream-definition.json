{
  "sources": [
    {
      "name": "AzureEventHubSource",
      "type": "AzureEventHub",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "consumerGroupName": "$Default",
        "inputSerialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      }
    },
    {
      "name": "AzureIoTHubSource",
      "type": "AzureIoTHub",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "consumerGroupName": "$Default",
        "inputSerialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      }
    },
    {
      "name": "CustomEndpointSource",
      "type": "CustomEndpoint",
      "properties": {}
    },
    {
      "name": "SampleDataSource",
      "type": "SampleData",
      "properties": {
        "type": "Bicycles"
      }
    },
    {
      "name": "AmazonKinesisSource",
      "type": "AmazonKinesis",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "region": "us-east-1",
        "startPosition":"LATEST",
        "startTimestamp": null
      }
    },
    {
      "name": "AmazonMSKKafkaSource",
      "type": "AmazonMSKKafka",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "topic": "topic",
        "consumerGroupName": "consumerGroupName",
        "autoOffsetReset": "Earliest",
        "saslMechanism": "SCRAM-SHA-512",
        "securityProtocol": "SASL_SSL"
      }
    },
    {
      "name": "ApacheKafkaSource",
      "type": "ApacheKafka",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "topic": "topic",
        "consumerGroupName": "consumerGroupName",
        "autoOffsetReset": "Latest",
        "saslMechanism": "PLAIN",
        "securityProtocol": "SASL_PLAINTEXT"
      }
    },
    {
      "name": "ConfluentCloudSource",
      "type": "ConfluentCloud",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "topic": "sales-data",
        "consumerGroupName": "my-consumergroup",
        "autoOffsetReset": "Earliest"
      }
    },
    {
      "name": "AzureCosmosDBCDCSource",
      "type": "AzureCosmosDBCDC",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "containerName": "containerName",
        "databaseName": "databaseName",
        "offsetPolicy": "Earliest"
      }
    },
    {
      "name": "AzureSQLDBCDCSource",
      "type": "AzureSQLDBCDC",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "tableName": ""
      }
    },
    {
      "name": "AzureSQLMIDBCDCSource",
      "type": "AzureSQLMIDBCDC",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "tableName": "tableName"
      }
    },
    {
      "name": "SQLServerOnVMDBCDCSource",
      "type": "SQLServerOnVMDBCDC",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "tableName": "tableName"
      }
    },
    {
      "name": "MySQLCDCSource",
      "type": "MySQLCDC",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "tableName": "tableName",
        "serverId": 9,
        "port": 3306
      }
    },
    {
      "name": "PostgreSQLCDCSource",
      "type": "PostgreSQLCDC",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "tableName": "tableName",
        "slotName": "slotName",
        "port": 5432
      }
    },
    {
      "name": "GooglePubSubSource",
      "type": "GooglePubSub",
      "properties": {
        "dataConnectionId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb"
      }
    },
    {
      "name": "FabricWorkspaceItemEvents",
      "type": "FabricWorkspaceItemEvents",
      "properties": {
        "eventScope": "Workspace",
        "workspaceId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "includedEventTypes": [
          "Microsoft.Fabric.ItemCreateSucceeded",
          "Microsoft.Fabric.ItemCreateFailed",
          "Microsoft.Fabric.ItemUpdateSucceeded",
          "Microsoft.Fabric.ItemUpdateFailed",
          "Microsoft.Fabric.ItemDeleteSucceeded",
          "Microsoft.Fabric.ItemDeleteFailed",
          "Microsoft.Fabric.ItemReadSucceeded",
          "Microsoft.Fabric.ItemReadFailed"
        ],
        "filters": [
          {
            "operatorType": "operatorType",
            "key": "schemaName"
          }
        ]
      }
    },
    {
      "name": "FabricJobEvents",
      "type": "FabricJobEvents",
      "properties": {
        "eventScope": "Item",
        "workspaceId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "itemId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "includedEventTypes": [
          "Microsoft.Fabric.JobEvents.ItemJobCreated",
          "Microsoft.Fabric.JobEvents.ItemJobStatusChanged",
          "Microsoft.Fabric.JobEvents.ItemJobSucceeded",
          "Microsoft.Fabric.JobEvents.ItemJobFailed"
        ],
        "filters": [
          {
            "operatorType": "IsNotNull",
            "key": "id"
          }
        ]
      }
    },
    {
      "name": "FabricOneLakeEventss",
      "type": "FabricOneLakeEvents",
      "properties": {
        "tenantId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "workspaceId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "itemId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "oneLakePaths": [
          "/Tables",
          "/Files"
        ],
        "includedEventTypes": [
          "Microsoft.Fabric.OneLake.FileCreated",
          "Microsoft.Fabric.OneLake.FileDeleted",
          "Microsoft.Fabric.OneLake.FileRenamed",
          "Microsoft.Fabric.OneLake.FolderCreated",
          "Microsoft.Fabric.OneLake.FolderDeleted",
          "Microsoft.Fabric.OneLake.FolderRenamed"
        ],
        "filters": [
          {
            "values": [
              "0"
            ],
            "operatorType": "StringNotIn",
            "key": "data.sequencer"
          }
        ]
      }
    }
  ],
  "destinations": [
    {
      "name": "CustomEndpointDestination",
      "type": "CustomEndpoint",
      "properties": {},
      "inputNodes": [
        {
          "name": "myEventstream-stream"
        }
      ]
    },
    {
      "name": "LakehouseDestination",
      "type": "Lakehouse",
      "properties": {
        "workspaceId": "00000000-0000-0000-0000-000000000000",
        "itemId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "schema": "dbo",
        "deltaTable": "deltaTable",
        "minimumRows": 100000,
        "maximumDurationInSeconds": 120,
        "inputSerialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      },
      "inputNodes": [
        {
          "name": "myEventstream-stream"
        }
      ]
    },
    {
      "name": "EventhousePushModeDestination",
      "type": "Eventhouse",
      "properties": {
        "dataIngestionMode": "ProcessedIngestion",
        "workspaceId": "00000000-0000-0000-0000-000000000000",
        "itemId": "aaaaaaaa-0000-1111-2222-bbbbbbbbbbbb",
        "databaseName": "databaseName",
        "tableName": "tableName",
        "inputSerialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      },
      "inputNodes": []
    }
  ],
  "streams": [
    {
      "name": "myEventstream-stream",
      "type": "DefaultStream",
      "properties": {},
      "inputNodes": [
        {
          "name": "sourceName"
        }
      ]
    },
    {
      "name": "DerivedStreamName",
      "type": "DerivedStream",
      "properties": {
        "inputSerialization": {
          "type": "Json",
          "properties": {
            "encoding": "UTF8"
          }
        }
      },
      "inputNodes": [
        {
          "name": "FilterName"
        }
      ]
    }
  ],
  "operators": [
    {
      "name": "FilterName",
      "type": "Filter",
      "inputNodes": [
        {
          "name": "myEventstream-stream"
        }
      ],
      "properties": {
        "conditions": [
          {
            "column": {
              "node": null,
              "columnName": "BikepointID",
              "columnPath": null,
              "expressionType": "ColumnReference"
            },
            "operatorType": "NotEquals",
            "value": {
              "dataType": "Nvarchar(max)",
              "value": "0",
              "expressionType": "Literal"
            }
          }
        ]
      }
    },
    {
      "name": "JoinerName",
      "type": "Join",
      "inputNodes": [
        {
          "name": "FilterName"
        },
        {
          "name": "myEventstream-stream"
        }
      ],
      "properties": {
        "joinType": "Inner",
        "joinOn": [
          {
            "left": {
              "node": "leftNodeName",
              "columnName": "leftColumnName"
            },
            "right": {
              "node": "rightNodeName",
              "columnName": "rightColumnName"
            }
          }
        ],
        "duration": {
          "value": 1,
          "unit": "Minute"
        }
      }
    },
    {
      "name": "FieldsManagerName",
      "type": "ManageFields",
      "inputNodes": [
        {
          "name": "myEventstream-stream"
        }
      ],
      "properties": {
        "columns": [
          {
            "type": "Rename",
            "properties": {
              "column": {
                "node": null,
                "columnName": "renameColumn"
              }
            },
            "alias": "renameAlias"
          },
          {
            "type": "Cast",
            "properties": {
              "targetDataType": "BigInt",
              "column": {
                "node":  null,
                "columnName": "castColumn"
              }
            },
            "alias": "castAlias"
          },
          {
            "type": "FunctionCall",
            "properties": {
              "functionName": "CharIndex",
              "arguments": [
                {
                  "expressionType": "Literal",
                  "dataType": "Nvarchar(max)",
                  "value": "aaa"
                },
                {
                  "expressionType": "ColumnReference",
                  "node": null,
                  "columnName": "deviceId",
                  "columnPathSegments": []
                },
                {
                  "expressionType": "Literal",
                  "dataType": "BigInt",
                  "value": "1"
                }
              ]
            },
            "alias": "charindex_number"
          }
        ]
      }
    },
    {
      "name": "AggregatorName",
      "type": "Aggregate",
      "inputNodes": [
        {
          "name": "myEventstream-stream"
        }
      ],
      "properties": {
        "aggregations": [
          {
            "aggregateFunction": "Average",
            "column": {
              "node": null,
              "columnName": "aggregationColumn"
            },
            "alias": "AVG_columnName",
            "partitionBy": [
              {
                "node": "partitionByNode",
                "columnName": "partitionByColumn"
              }
            ],
            "duration": {
              "value": 1,
              "unit": "Minute"
            }
          }
        ]
      }
    },
    {
      "name": "GroupByName",
      "type": "GroupBy",
      "inputNodes": [
        {
          "name": "myEventstream-stream"
        }
      ],
      "properties": {
        "aggregations": [
          {
            "aggregateFunction": "Average",
            "column": {
              "node": null,
              "columnName": "groupByAggregationColumn"
            },
            "alias": "groupByAggregationAlias"
          }
        ],
        "groupBy": [
          {
            "node": null,
            "columnName": "groupByColumn"
          }
        ],
        "window": {
          "type": "Tumbling",
          "properties": {
            "duration": {
              "value": 5,
              "unit": "Minute"
            },
            "offset": {
              "value": 1,
              "unit": "Minute"
            }
          }
        }
      }
    },
    {
      "name": "UnionName",
      "type": "Union",
      "inputNodes": [
        {
          "name": "FilterName"
        },
        {
          "name": "GroupByName"
        }
      ],
      "properties": {}
    },
    {
      "name": "ExpansionName",
      "type": "Expand",
      "inputNodes": [
        {
          "name": "MyNode"
        }
      ],
      "properties": {
        "column": {
          "node": null,
          "columnName": "expansionColumn"
        },
        "ignoreMissingOrEmpty": true
      }
    }
  ],
  "compatibilityLevel": "1.0"
}
